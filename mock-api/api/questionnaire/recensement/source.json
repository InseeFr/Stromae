{
  "id": "lfrzny8b",
  "modele": "RP",
  "enoCoreVersion": "2.4.1",
  "lunaticModelVersion": "2.3.1",
  "generatingDate": "28-03-2023 12:57:35",
  "missing": false,
  "pagination": "question",
  "maxPage": "23",
  "label": {
    "value": "02 - Recensement de la population 2022 - Avec changements",
    "type": "VTL|MD"
  },
  "suggesters": [
    {
      "name": "communes-2019",
      "fields": [
        {
          "name": "label",
          "rules": "soft"
        },
        {
          "name": "nccenr",
          "rules": "soft"
        },
        {
          "name": "id",
          "rules": "soft"
        }
      ],
      "queryParser": {
        "type": "soft"
      },
      "version": "1"
    }
  ],
  "components": [
		{
			"id": "kkxugktl-title",
			"componentType": "Sequence",
			"page": "1",
			"label": {
				"value": "\"## Première partie : le logement\"",
				"type": "VTL|MD"
			},
			"conditionFilter": {
				"value": "true",
				"type": "VTL"
			}
		},
    {
			"id": "kkxugktl-subtitle",
			"componentType": "Sequence",
			"page": "1",
			"label": {
				"value": "\"les questions sur le logement permettent de connaître les charectéristiques du logement, d'analyser les conditions de vie des ménages et de planifier le développement urbain pour adapter les politiques de logement en fonction des besoins de la population.\"",
				"type": "VTL"
			},
			"conditionFilter": {
				"value": "true",
				"type": "VTL"
			}
		},
    {
      "id": "lfs5q1zj",
      "componentType": "ComponentSet",
      "page": "2",
      "className": "totoComponentSet",
      "conditionFilter": { "value": "true", "type": "VTL" },
      "label": {
          "value": "\"Quels sont les identifiants de votre logement?\"",
          "type": "VTL"
      },
      "components": [
        {
          "id": "lfs5q1zj-IRIS",
          "componentType": "Input",
          "mandatory": false,
          "className": "totoComponentSet-INput-one",
          "maxLength": 4,
          "label": {
            "value": "\"IRIS, Ilot ou district\"",
            "type": "VTL"
          },
          "description": {
            "value": "\"4 caractères\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "controls": [
            {
              "id": "lfs5q1zj-IRIS-CI-0",
              "typeOfControl": "CONSISTENCY",
              "criticality": "WARN",
              "control": {
                "value": "not(isnull(ZC))",
                "type": "VTL"
              },
              "errorMessage": {
                "value": "\"Veuillez reporter l'IRIS, l'ilôt ou district renseigné par l’agent recenseur sur la notice.\"",
                "type": "VTL"
              },
              "bindingDependencies": ["ZC", "ADR_RANG", "LOG_RANG"]
            }
          ],
          "bindingDependencies": ["ZC"],
          "response": {
            "name": "ZC"
          }
        },
        {
          "id": "lfs6b745",
          "componentType": "Input",
          "mandatory": false,
          "maxLength": 3,
          "label": {
            "value": "\"Rang A\"",
            "type": "VTL"
          },
          "description": {
            "value": "\"3 caractères\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "controls": [
            {
              "id": "lfs5q1zj-CI-1",
              "typeOfControl": "CONSISTENCY",
              "criticality": "WARN",
              "control": {
                "value": "not(isnull(ADR_RANG))",
                "type": "VTL"
              },
              "errorMessage": {
                "value": "\"Veuillez reporter le rang A renseigné par l’agent recenseur sur la notice.\"",
                "type": "VTL"
              },
              "bindingDependencies": ["ZC", "ADR_RANG", "LOG_RANG"]
            }
          ],
          "bindingDependencies": ["ADR_RANG"],
          "response": {
            "name": "ADR_RANG"
          }
        },
        {
          "id": "lfs5sesc",
          "componentType": "Input",
          "mandatory": false,
          "maxLength": 3,
          "label": {
            "value": "\"Rang L\"",
            "type": "VTL"
          },
          "description": {
            "value": "\"3 caractères\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "controls": [
            {
              "id": "lfs5q1zj-CI-2",
              "typeOfControl": "CONSISTENCY",
              "criticality": "WARN",
              "control": {
                "value": "not(isnull(LOG_RANG))",
                "type": "VTL"
              },
              "errorMessage": {
                "value": "\"Veuillez reporter le rang L renseigné par l’agent recenseur sur la notice.\"",
                "type": "VTL"
              },
              "bindingDependencies": ["ZC", "ADR_RANG", "LOG_RANG"]
            }
          ],
          "bindingDependencies": ["LOG_RANG"],
          "response": {
            "name": "LOG_RANG"
          }
        }
      ]
    },
		{
			"id": "lfs0z1kg",
			"componentType": "Radio",
			"mandatory": false,
			"page": "3",
			"label": {
				"value": "\"### Le bâtiment se compose-t-il d'un seul logement ?\"",
				"type": "VTL|MD"
			},
			"conditionFilter": {
				"value": "true",
				"type": "VTL"
			},
			"bindingDependencies": ["TYPES"],
			"options": [
				{
					"value": "1",
					"label": {
						"value": "\"Oui\"",
						"type": "VTL"
					}
				},
				{
					"value": "2",
					"label": {
						"value": "\"Non\"",
						"type": "VTL"
					}
				}
			],
			"response": {
				"name": "TYPES"
			}
		},
		{
			"id": "klqncpes",
			"componentType": "Radio",
			"mandatory": false,
			"page": "3",
			"maxLength": 4,
			"label": {
				"value": "\"### De quel type de bâtiment s'agit-il ?\"",
				"type": "VTL|MD"
			},
			"conditionFilter": {
				"value": "(TYPES = \"1\")",
				"type": "VTL",
				"bindingDependencies": ["TYPES"]
			},
			"options": [
				{
					"value": "1",
					"label": {
						"value": "\"Isolé\"",
						"type": "VTL"
					},
					"description": {
						"value": "\"Bâtiment sans mur mitoyen avec un autre bâtiment \"",
						"type": "VTL"
					}
				},
				{
					"value": "2",
					"label": {
						"value": "\"Jumelé, en bande, ou groupé de toute autre façon\"",
						"type": "VTL"
					},
					"description": {
						"value": "\"Bâtiment avec au moins un mur mitoyen \"",
						"type": "VTL"
					}
				}
			],
			"bindingDependencies": ["TYPC"],
			"response": {
				"name": "TYPC"
			}
		},
		{
			"id": "klqncpes",
			"componentType": "Radio",
			"mandatory": false,
			"page": "3",
			"maxLength": 4,
			"label": {
				"value": "\"### De quel type de bâtiment ou construction s'agit-il ?\"",
				"type": "VTL|MD"
			},
			"conditionFilter": {
				"value": "(TYPES = \"2\")",
				"type": "VTL",
				"bindingDependencies": ["TYPES"]
			},
			"options": [
				{
					"value": "1",
					"label": {
						"value": "\"Bâtiment d’habitation de 2 logements ou plus\"",
						"type": "VTL"
					},
					"description": {
						"value": "\"Le bâtiment comprend au moins 2 logements, que leur accès sur la rue soit commun ou séparé. \"",
						"type": "VTL"
					}
				},
				{
					"value": "2",
					"label": {
						"value": "\"Bâtiment à usage autre que l’habitation (communauté, usine, gare, stade, immeuble de bureaux, etc.)\"",
						"type": "VTL"
					},
					"description": {
						"value": "\"Le bâtiment n'est pas principalement destiné à l'habitation mais abrite cependant un ou plusieurs logements. \"",
						"type": "VTL"
					}
				},
				{
					"value": "3",
					"label": {
						"value": "\"Construction provisoire, mobile home\"",
						"type": "VTL"
					},
					"description": {
						"value": "\"Par exemple, baraque de chantier, 'algéco', abri utilisé comme logement, bungalow, mobile-home sans roue ni barre de traction, ... \"",
						"type": "VTL"
					}
				}
			],
			"bindingDependencies": ["TYPC"],
			"response": {
				"name": "TYPC"
			}
		},
    {
      "id": "kkxuu8ov-set",
      "componentType": "ComponentSet",
      "page": "4",
      "conditionFilter": { "value": "true", "type": "VTL" },
      "label": {
          "value": "\"Quel est le nom de l'occupant principal ?\"",
          "type": "VTL"
      },
      "components": [
        {
          "id": "kkxuu8ov-title",
          "componentType": "Sequence",
          "label": {
            "value": "\"Vos réponses sont destinées à l’ élaboration de statistiques ne comportant pas votre nom. Cette dernière information est néanmoins nécessaire pour vérifier que les personnes ne sont comptées qu’une fois et une seule, et pour assurer la qualité des statistiques produites.\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          }
        },
        {
          "id": "kkxuu8ov",
          "componentType": "Input",
          "mandatory": false,
          "maxLength": 80,
          "label": {
            "value": "\"Nom de l’occupant(e) principal(e)\"",
            "type": "VTL"
          },
          "description": {
            "value": "\"Exemple: Dupont\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "controls": [
            {
              "id": "lfs5q1zj-CI-2",
              "typeOfControl": "CONSISTENCY",
              "criticality": "ERROR",
              "control": {
                "value": "not(isnull(NOM_OCC))",
                "type": "VTL"
              },
              "errorMessage": {
                "value": "\"Veuillez renseigner le nom de l'occupant principal.\"",
                "type": "VTL"
              },
              "bindingDependencies": ["NOM_OCC"]
            }
          ],
          "bindingDependencies": ["NOM_OCC"],
          "response": {
            "name": "NOM_OCC"
          }
        }
      ]
    },
    {
      "id": "kkxv0qgj-set",
      "componentType": "ComponentSet",
      "page": "5",
      "conditionFilter": { "value": "true", "type": "VTL" },
      "label": {
        "value": "\"Sur quelle adresse électronique souhaitez-vous recevoir votre accusé de réception ?\"",
        "type": "VTL"
      },
      "components": [
        {
          "id": "kkxv0qgj-title",
          "componentType": "Sequence",
          "label": {
            "value": "\"Cette adresse électronique servira à vous envoyer un accusé de réception de votre questionnaire et éventuellement à vous renvoyer un mot de passe en cas de perte. Elle ne sera utilisée qu’à cette seule fin et ne sera ni conservée, ni transmise à un tiers.\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          }
        },
        {
          "id": "kkxv0qgj",
          "componentType": "Input",
          "mandatory": false,
          "maxLength": 249,
          "label": {
            "value": "\"Adresse électronique\"",
            "type": "VTL"
          },
          "description": {
            "value": "\"Exemple: john.dupont@gmail.com\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "bindingDependencies": ["EMAIL_OCC"],
          "response": {
            "name": "EMAIL_OCC"
          }
        }
      ]
    },
    {
      "id": "l8twtrc9-set",
      "componentType": "ComponentSet",
      "page": "6",
      "conditionFilter": { "value": "true", "type": "VTL" },
      "label": {
        "value": "\"Quelle est l'adresse de votre logement ?\"",
        "type": "VTL"
      },
      "components": [
        {
          "id": "l8twtrc9",
          "componentType": "Input",
          "mandatory": false,
          "maxLength": 4,
          "className": "toto", 
          "label": {
            "value": "\"Numéro\"",
            "type": "VTL"
          },
          "description": {
            "value": "\"Exemple: 56\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "bindingDependencies": ["NUMVOI_LOC"],
          "response": {
            "name": "NUMVOI_LOC"
          }
        },
        {
          "id": "l8twwcvn",
          "componentType": "Dropdown",
          "mandatory": false,
          "maxLength": 4,
          "label": {
            "value": "\"Indice de répétition\"",
            "type": "VTL|MD"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "options": [
            {
              "value": "0",
              "label": {
                "value": "\"Bis\"",
                "type": "VTL|MD"
              }
            },
            {
              "value": "1",
              "label": {
                "value": "\"Ter\"",
                "type": "VTL|MD"
              }
            },
            {
              "value": "2",
              "label": {
                "value": "\"Quater\"",
                "type": "VTL|MD"
              }
            },
            {
              "value": "3",
              "label": {
                "value": "\"Quinquies\"",
                "type": "VTL|MD"
              }
            }
          ],
          "bindingDependencies": ["BISTER_LOC"],
          "response": {
            "name": "BISTER_LOC"
          }
        },
        {
          "id": "l8twyzo4",
          "componentType": "Input",
          "mandatory": false,
          "maxLength": 27,
          "label": {
            "value": "\"Type de voie\"",
            "type": "VTL"
          },
          "description": {
            "value": "\"Exemple: rue\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "bindingDependencies": ["TYPEVOI_LOC"],
          "response": {
            "name": "TYPEVOI_LOC"
          }
        },
        {
          "id": "l8twy1k6",
          "componentType": "Input",
          "mandatory": false,
          "maxLength": 80,
          "label": {
            "value": "\"Libellé de la voie (ou lieu-dit)\"",
            "type": "VTL|MD"
          },
          "description": {
            "value": "\"Exemple: des petites écuries\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "controls": [
            {
              "id": "klqmzxr4-CI-0",
              "typeOfControl": "CONSISTENCY",
              "criticality": "WARN",
              "control": {
                "value": "not(isnull(NOMVOI_LOC))",
                "type": "VTL"
              },
              "errorMessage": {
                "value": "\"Veuillez renseigner le nom de la voie de votre logement, information est indispensable pour s'assurer que le recensement s'effectue à la bonne adresse.\"",
                "type": "VTL"
              },
              "bindingDependencies": ["NOMVOI_LOC"]
            }
          ],
          "bindingDependencies": ["NOMVOI_LOC"],
          "response": {
            "name": "NOMVOI_LOC"
          }
        },
        {
          "id": "l8txcnai",
          "componentType": "Input",
          "mandatory": false,
          "maxLength": 5,
          "label": {
            "value": "\"Code postal\"",
            "type": "VTL"
          },
          "description": {
            "value": "\"Exemple: 75010\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "bindingDependencies": ["CPOST_LOC"],
          "response": {
            "name": "CPOST_LOC"
          }
        },
        {
          "id": "l8txcnai-commune",
          "componentType": "Input",
          "mandatory": false,
          "maxLength": 25,
          "label": {
            "value": "\"Commune (et arrondissement pour Paris, Lyon et Marseille)\"",
            "type": "VTL"
          },
          "description": {
            "value": "\"Exemple: Paris 10e\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "bindingDependencies": ["COM_LOC"],
          "response": {
            "name": "COM_LOC"
          }
        },
        {
          "id": "l8tx81u3",
          "componentType": "Input",
          "mandatory": false,
          "maxLength": 40,
          "label": {
            "value": "\"Résidence, hameau, lotissement,...\"",
            "type": "VTL"
          },
          "description": {
            "value": "\"Exemple: résidence de la forêt\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "bindingDependencies": ["RES_LOC"],
          "response": {
            "name": "RES_LOC"
          }
        },
        {
          "id": "l8tx1vsp",
          "componentType": "Input",
          "mandatory": false,
          "maxLength": 20,
          "label": {
            "value": "\"Bâtiment\"",
            "type": "VTL|MD"
          },
          "description": {
            "value": "\"Exemple: bâtiment Tilleul\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "bindingDependencies": ["BAT_LOC"],
          "response": {
            "name": "BAT_LOC"
          }
        },
        {
          "id": "l8txj55d",
          "componentType": "Input",
          "mandatory": false,
          "maxLength": 10,
          "label": {
            "value": "\"Escalier\"",
            "type": "VTL"
          },
          "description": {
            "value": "\"Exemple: B\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "bindingDependencies": ["ESC_LOC"],
          "response": {
            "name": "ESC_LOC"
          }
        },
        {
          "id": "l8txiop1",
          "componentType": "Input",
          "mandatory": false,
          "maxLength": 3,
          "label": {
            "value": "\"Étage\"",
            "type": "VTL"
          },
          "description": {
            "value": "\"Exemple: 4\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "bindingDependencies": ["ETAGE_LOC"],
          "response": {
            "name": "ETAGE_LOC"
          }
        },
        {
          "id": "l8txsdqj",
          "componentType": "Input",
          "mandatory": false,
          "maxLength": 40,
          "label": {
            "value": "\"N° de porte ou position par rapport à l’escalier\"",
            "type": "VTL"
          },
          "description": {
            "value": "\"Exemple: gauche\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "bindingDependencies": ["N_PORTE_LOC"],
          "response": {
            "name": "N_PORTE_LOC"
          }
        }
      ]
    },
		{
			"id": "klqmzxr4",
			"componentType": "Radio",
			"mandatory": false,
			"page": "7",
			"label": {
				"value": "\"### Quel est le type de logement ?\"",
				"type": "VTL|MD"
			},
			"conditionFilter": {
				"value": "true",
				"type": "VTL"
			},
			"controls": [
				{
					"id": "klqmzxr4-CI-0",
					"typeOfControl": "CONSISTENCY",
					"criticality": "WARN",
					"control": {
						"value": "not(isnull(TYPL))",
						"type": "VTL"
					},
					"errorMessage": {
						"value": "\"Merci de renseigner le type de logement\"",
						"type": "VTL"
					},
					"bindingDependencies": ["TYPL"]
				}
			],
			"bindingDependencies": ["TYPL"],
			"options": [
				{
					"value": "1",
					"label": {
						"value": "\"Maison\"",
						"type": "VTL"
					}
				},
				{
					"value": "2",
					"label": {
						"value": "\"Appartement\"",
						"type": "VTL"
					}
				},
				{
					"value": "3",
					"label": {
						"value": "\"Logement-foyer\"",
						"type": "VTL"
					}
				},
				{
					"value": "4",
					"label": {
						"value": "\"Chambre d’hôtel\"",
						"type": "VTL"
					}
				},
				{
					"value": "5",
					"label": {
						"value": "\"Habitation de fortune\"",
						"type": "VTL"
					}
				},
				{
					"value": "6",
					"label": {
						"value": "\"Pièce indépendante (ayant sa propre entrée)\"",
						"type": "VTL"
					}
				}
			],
			"response": {
				"name": "TYPL"
			}
		},
		{
			"id": "klqmu096",
			"componentType": "Radio",
			"mandatory": false,
			"page": "8",
			"label": {
				"value": "\"### Ce logement est-il desservi par un ascenseur ?\"",
				"type": "VTL|MD"
			},
			"conditionFilter": {
				"value": "true",
				"type": "VTL"
			},
			"controls": [
				{
					"id": "klqmu096-CI-0",
					"typeOfControl": "CONSISTENCY",
					"criticality": "WARN",
					"control": {
						"value": "not(isnull(ASCEN))",
						"type": "VTL"
					},
					"errorMessage": {
						"value": "\"Merci d’indiquer si ce logement est desservi par un ascenseur.\"",
						"type": "VTL"
					},
					"bindingDependencies": ["ASCEN"]
				}
			],
			"bindingDependencies": ["ASCEN"],
			"options": [
				{
					"value": "1",
					"label": {
						"value": "\"Oui\"",
						"type": "VTL"
					}
				},
				{
					"value": "2",
					"label": {
						"value": "\"Non\"",
						"type": "VTL"
					}
				}
			],
			"response": {
				"name": "ASCEN"
			}
		},
		{
			"id": "klqn2o7t",
			"componentType": "Radio",
			"mandatory": false,
			"page": "9",
			"label": {
				"value": "\"### Quand s’est terminée la construction de l’immeuble ou de votre maison ?\"",
				"type": "VTL|MD"
			},
			"description": {
				"value": "\"Si les différentes parties ne sont pas de la même époque, indiquez l’année d’achèvement de la partie habitée la plus importante.\"",
				"type": "VTL"
			},
			"conditionFilter": {
				"value": "true",
				"type": "VTL"
			},
			"controls": [
				{
					"id": "klqn2o7t-CI-0",
					"typeOfControl": "CONSISTENCY",
					"criticality": "WARN",
					"control": {
						"value": "not(isnull(ACHL))",
						"type": "VTL"
					},
					"errorMessage": {
						"value": "\"Merci d’indiquer l’année d’achèvement de la construction. \"",
						"type": "VTL"
					},
					"bindingDependencies": ["ACHL"]
				}
			],
			"bindingDependencies": ["ACHL"],
			"options": [
				{
					"value": "1",
					"label": {
						"value": "\"Avant 1919\"",
						"type": "VTL"
					}
				},
				{
					"value": "2",
					"label": {
						"value": "\"De 1919 à 1945\"",
						"type": "VTL"
					}
				},
				{
					"value": "3",
					"label": {
						"value": "\"De 1946 à 1970\"",
						"type": "VTL"
					}
				},
				{
					"value": "4",
					"label": {
						"value": "\"De 1971 à 1990\"",
						"type": "VTL"
					}
				},
				{
					"value": "5",
					"label": {
						"value": "\"De 1991 à 2005\"",
						"type": "VTL"
					}
				},
				{
					"value": "6",
					"label": {
						"value": "\"2006 ou après\" || \"\"",
						"type": "VTL"
					}
				}
			],
			"response": {
				"name": "ACHL"
			}
		},
		{
			"id": "klqn3zmk",
			"componentType": "Input",
			"mandatory": false,
			"page": "9",
			"min": 2006,
			"max": 2024,
			"decimals": 0,
			"label": {
				"value": "\"Année d’achèvement de la construction\"",
				"type": "VTL"
			},
			"description": {
				"value": "\"Doit être comprise entre 2006 ou 2024\"",
				"type": "VTL"
			},
			"conditionFilter": {
				"value": "ACHL = \"6\"",
				"type": "VTL"
			},
			"controls": [
				{
					"id": "klqn3zmk-format-borne-inf-sup",
					"typeOfControl": "FORMAT",
					"criticality": "ERROR",
					"control": {
						"value": "not(isnull(AACHL)) and (cast(AACHL,integer>2006) or cast(AACHL,integer)<2024)",
						"type": "VTL"
					},
					"errorMessage": {
						"value": "\" La valeur doit être comprise entre 2006 et 2024.\"",
						"type": "VTL"
					}
				},
				{
					"id": "klqn3zmk-format-decimal",
					"typeOfControl": "FORMAT",
					"criticality": "ERROR",
					"control": {
						"value": "not(isnull(AACHL))  and (round(AACHL,0)<>AACHL))",
						"type": "VTL"
					},
					"errorMessage": {
						"value": "\"Le nombre doit comporter au maximum 0 chiffre(s) après la virgule.\"",
						"type": "VTL"
					}
				}
			],
			"bindingDependencies": ["AACHL"],
			"response": {
				"name": "AACHL"
			}
		},
		{
			"id": "lfs0z1kg",
			"componentType": "Radio",
			"mandatory": false,
			"page": "10",
			"label": {
				"value": "\"### Les occupants du logement sont-ils arrivés en même temps ?\"",
				"type": "VTL|MD"
			},
			"conditionFilter": {
				"value": "true",
				"type": "VTL"
			},
			"bindingDependencies": ["IAEMM"],
			"options": [
				{
					"value": "1",
					"label": {
						"value": "\"Oui\"",
						"type": "VTL"
					}
				},
				{
					"value": "2",
					"label": {
						"value": "\"Non\"",
						"type": "VTL"
					}
				}
			],
			"response": {
				"name": "IAEMM"
			}
		},
    {
      "id": "klqncpes-set",
      "componentType": "ComponentSet",
      "page": "10",
      "conditionFilter": {
				"value": "(IAEMM = \"1\")",
				"type": "VTL",
				"bindingDependencies": ["IAEMM"]
			},
      "label": {
        "value": "\"En quelle année avez-vous emménagé ?\"",
          "type": "VTL"
      },
      "components": [
        {
          "id": "klqncpes",
          "componentType": "Input",
          "mandatory": false,
          "maxLength": 4,
          "label": {
            "value": "\"Année d'emménagement\"",
            "type": "VTL"
          },
          "description": {
            "value": "\"Si vous avez toujours vécu dans le logement, reportez votre année de naissance.\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "(IAEMM = \"1\")",
            "type": "VTL",
            "bindingDependencies": ["IAEMM"]
          },
          "controls": [
            {
              "id": "klqncpes-CI-0",
              "typeOfControl": "CONSISTENCY",
              "criticality": "WARN",
              "control": {
                "value": "not(cast(AEMM_OCC,integer) < cast(ACHL,integer))",
                "type": "VTL"
              },
              "errorMessage": {
                "value": "\"Veuillez compléter votre année d'emménagement.\"",
                "type": "VTL"
              },
              "bindingDependencies": ["AEMM_OCC", "ACHL"]
            }
          ],
          "bindingDependencies": ["AEMM_OCC"],
          "response": {
            "name": "AEMM_OCC"
          }
        }
      ]
    },
    {
      "id": "lfs14r5h-set",
      "componentType": "ComponentSet",
      "page": "10",
      "conditionFilter": {
				"value": "(IAEMM = \"2\")",
				"type": "VTL",
				"bindingDependencies": ["IAEMM"]
			},
      "label": {
        "value": "\"En quelle année, le premier des occupants de ce logement a-t-il emménagé ? \"",
        "type": "VTL"
      },
      "components": [   
        {
          "id": "lfs14r5h",
          "componentType": "Input",
          "mandatory": false,
          "min": 1900,
          "max": 2024,
          "decimals": 0,
          "label": {
            "value": "\"Année d'emménagement du premier occupant\"",
            "type": "VTL"
          },
          "description": {
            "value": "\"Si cette personne a toujours vécu dans le logement, reportez son année de naissance.\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "(IAEMM = \"2\")",
            "type": "VTL",
            "bindingDependencies": ["IAEMM"]
          },
          "controls": [
            {
              "id": "lfs14r5h-format-borne-inf-sup",
              "typeOfControl": "FORMAT",
              "criticality": "ERROR",
              "control": {
                "value": "not(not(isnull(AEMM)) and (1900>AEMM or 2024<AEMM))",
                "type": "VTL"
              },
              "errorMessage": {
                "value": "\" La valeur doit être comprise entre 1900 et 2024.\"",
                "type": "VTL"
              }
            },
            {
              "id": "lfs14r5h-format-decimal",
              "typeOfControl": "FORMAT",
              "criticality": "ERROR",
              "control": {
                "value": "not(not(isnull(AEMM))  and round(AEMM,0)<>AEMM)",
                "type": "VTL"
              },
              "errorMessage": {
                "value": "\"Le nombre doit comporter au maximum 0 chiffre(s) après la virgule.\"",
                "type": "VTL"
              }
            }
          ],
          "bindingDependencies": ["AEMM"],
          "response": {
            "name": "AEMM"
          }
        }
      ]
    },
    {
      "id": "klqns4rj-set",
      "componentType": "ComponentSet",
      "page": "11",
      "conditionFilter": { "value": "true", "type": "VTL" },
      "label": {
        "value": "\"De combien de pièces d’habitation se composent votre logement ?\"",
          "type": "VTL"
      },
      "components": [
        {
          "id": "klqns4rj-subtitle1",
          "componentType": "Sequence",
          "label": {
            "value": "\"Comptez les pièces d’habitation telles que salle à manger, séjour, salon, chambre, etc., quelle que soit leur surface.\n\n \n\n Comptez la cuisine uniquement si sa surface est supérieure à 12 m2.\n\n Ne comptez pas les pièces telles que salle de bains, buanderie, WC, etc., ni les pièces à usage exclusivement professionnel (atelier, cabinet de médecin, etc.)\"",
            "type": "VTL|MD"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          }
        },
        {
          "id": "klqns4rj",
          "componentType": "InputNumber",
          "mandatory": false,
          "min": 0,
          "max": 200,
          "decimals": 0,
          "label": {
            "value": "\"Nombre de pièces d’habitation\"",
            "type": "VTL"
          },
          "description": {
            "value": "\"Exemple: 3\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "controls": [
            {
              "id": "klqns4rj-format-borne-inf-sup",
              "typeOfControl": "FORMAT",
              "criticality": "ERROR",
              "control": {
                "value": "not(not(isnull(NBPI)) and (0>NBPI or 200<NBPI))",
                "type": "VTL"
              },
              "errorMessage": {
                "value": "\" La valeur doit être comprise entre 0 et 200.\"",
                "type": "VTL"
              }
            },
            {
              "id": "klqns4rj-format-decimal",
              "typeOfControl": "FORMAT",
              "criticality": "ERROR",
              "control": {
                "value": "not(not(isnull(NBPI))  and round(NBPI,0)<>NBPI)",
                "type": "VTL"
              },
              "errorMessage": {
                "value": "\"Le nombre doit comporter au maximum 0 chiffre(s) après la virgule.\"",
                "type": "VTL"
              }
            },
            {
              "id": "klqns4rj-CI-0",
              "typeOfControl": "CONSISTENCY",
              "criticality": "WARN",
              "control": {
                "value": "not(isnull(NBPI))",
                "type": "VTL"
              },
              "errorMessage": {
                "value": "\"Merci de saisir un nombre de pièces valide.\"",
                "type": "VTL"
              },
              "bindingDependencies": ["NBPI"]
            }
          ],
          "bindingDependencies": ["NBPI"],
          "response": {
            "name": "NBPI"
          }
        }
      ]
    },
		{
			"id": "klqnxdxp",
			"componentType": "Radio",
			"mandatory": false,
			"page": "12",
			"label": {
				"value": "\"### Quelle est la surface de ce logement ?\"",
				"type": "VTL|MD"
			},
			"description": {
				"value": "\"Tenez compte de toutes les pièces, y compris couloir, cuisine, salle de bains, WC, etc.Ne tenez pas compte des balcons, terrasses, caves, greniers, parkings et des pièces à usage exclusivement professionnel.\"",
				"type": "VTL"
			},
			"conditionFilter": {
				"value": "true",
				"type": "VTL"
			},
			"controls": [
				{
					"id": "klqnxdxp-CI-0",
					"typeOfControl": "CONSISTENCY",
					"criticality": "WARN",
					"control": {
						"value": "not(isnull(SURF))",
						"type": "VTL"
					},
					"errorMessage": {
						"value": "\"Merci d’indiquer la surface de ce logement.\"",
						"type": "VTL"
					},
					"bindingDependencies": ["SURF"]
				}
			],
			"bindingDependencies": ["SURF"],
			"options": [
				{
					"value": "1",
					"label": {
						"value": "\"Moins de 30 m²\"",
						"type": "VTL"
					}
				},
				{
					"value": "2",
					"label": {
						"value": "\"De 30 à moins de 40 m²\"",
						"type": "VTL"
					}
				},
				{
					"value": "3",
					"label": {
						"value": "\"De 40 à moins de 60 m²\"",
						"type": "VTL"
					}
				},
				{
					"value": "4",
					"label": {
						"value": "\"De 60 à moins de 80 m²\"",
						"type": "VTL"
					}
				},
				{
					"value": "5",
					"label": {
						"value": "\"De 80 à moins de 100 m²\"",
						"type": "VTL"
					}
				},
				{
					"value": "6",
					"label": {
						"value": "\"De 100 à moins de 120 m²\"",
						"type": "VTL"
					}
				},
				{
					"value": "7",
					"label": {
						"value": "\"120 m² ou plus\" || \"\"",
						"type": "VTL"
					}
				}
			],
			"response": {
				"name": "SURF"
			}
		},
		{
			"id": "klqns2qd",
			"componentType": "Radio",
			"mandatory": false,
			"page": "13",
			"label": {
				"value": "\"### Êtes-vous :\"",
				"type": "VTL|MD"
			},
			"conditionFilter": {
				"value": "true",
				"type": "VTL"
			},
			"controls": [
				{
					"id": "klqns2qd-CI-0",
					"typeOfControl": "CONSISTENCY",
					"criticality": "WARN",
					"control": {
						"value": "not(isnull(STOC))",
						"type": "VTL"
					},
					"errorMessage": {
						"value": "\"Merci de renseigner le statut d’occupation du logement.\"",
						"type": "VTL"
					},
					"bindingDependencies": ["STOC"]
				}
			],
			"bindingDependencies": ["STOC"],
			"options": [
				{
					"value": "1",
					"label": {
						"value": "\"propriétaire de ce logement (y compris en accession, en indivision ou jouissance du logement par usufruit) ?\"",
						"type": "VTL"
					}
				},
				{
					"value": "2",
					"label": {
						"value": "\"locataire ou sous-locataire du logement, loué vide ?\"",
						"type": "VTL"
					}
				},
				{
					"value": "3",
					"label": {
						"value": "\"locataire ou sous-locataire du logement ou de la chambre, loué(e) meublé(e) ?\"",
						"type": "VTL"
					}
				},
				{
					"value": "4",
					"label": {
						"value": "\"logé(e) gratuitement, par exemple par des parents, des amis ou votre employeur (y compris les personnes occupant un logement qu’elles ont vendu en viager) ?\"",
						"type": "VTL"
					}
				}
			],
			"response": {
				"name": "STOC"
			}
		},
    {
			"id": "klqnr6f5",
			"componentType": "Radio",
			"mandatory": false,
			"page": "14",
			"label": {
				"value": "\"### Ce logement appartient-il à un organisme d’HLM ?\"",
				"type": "VTL|MD"
			},
			"conditionFilter": {
				"value": "true",
				"type": "VTL"
			},
			"controls": [
				{
					"id": "klqnr6f5-CI-0",
					"typeOfControl": "CONSISTENCY",
					"criticality": "WARN",
					"control": {
						"value": "not(isnull(HLML))",
						"type": "VTL"
					},
					"errorMessage": {
						"value": "\"Merci d’indiquer si ce logement appartient à un organisme d’HLM.\"",
						"type": "VTL"
					},
					"bindingDependencies": ["HLML"]
				}
			],
			"bindingDependencies": ["HLML"],
			"options": [
				{
					"value": "1",
					"label": {
						"value": "\"Oui\"",
						"type": "VTL"
					}
				},
				{
					"value": "2",
					"label": {
						"value": "\"Non\"",
						"type": "VTL"
					}
				}
			],
			"response": {
				"name": "HLML"
			}
		},
    {
      "id": "klqobgcg",
      "componentType": "Radio",
      "mandatory": false,
      "page": "15",
      "label": {
        "value": "\"### Quelles sont les installations sanitaires de ce logement ?\"",
        "type": "VTL|MD"
      },
      "conditionFilter": {
        "value": "true",
        "type": "VTL"
      },
      "controls": [
        {
          "id": "klqobgcg-CI-0",
          "typeOfControl": "CONSISTENCY",
          "criticality": "WARN",
          "control": {
            "value": "not(isnull(SANI))",
            "type": "VTL"
          },
          "errorMessage": {
            "value": "\"Merci d’indiquer les installations sanitaires de ce logement.\"",
            "type": "VTL"
          },
          "bindingDependencies": [
            "SANI"
          ]
        }
      ],
      "bindingDependencies": [
        "SANI"
      ],
      "options": [
        {
          "value": "1",
          "label": {
            "value": "\"Ni baignoire, ni douche\"",
            "type": "VTL"
          }
        },
        {
          "value": "2",
          "label": {
            "value": "\"Baignoire ou douche dans une pièce non réservée à la toilette\"",
            "type": "VTL"
          }
        },
        {
          "value": "3",
          "label": {
            "value": "\"Salle(s) de bains (avec douche ou baignoire)\"",
            "type": "VTL"
          }
        }
      ],
      "response": {
        "name": "SANI"
      }
    },
    {
      "id": "klqnzaud",
      "componentType": "Radio",
      "mandatory": false,
      "page": "16",
      "label": {
        "value": "\"### Quel est le principal moyen de chauffage de ce logement ?\"",
        "type": "VTL|MD"
      },
      "conditionFilter": {
        "value": "true",
        "type": "VTL"
      },
      "controls": [
        {
          "id": "klqnzaud-CI-0",
          "typeOfControl": "CONSISTENCY",
          "criticality": "WARN",
          "control": {
            "value": "not(isnull(CHFL))",
            "type": "VTL"
          },
          "errorMessage": {
            "value": "\"Merci de renseigner le principal moyen de chauffage de ce logement.\"",
            "type": "VTL"
          },
          "bindingDependencies": [
            "CHFL"
          ]
        }
      ],
      "bindingDependencies": [
        "CHFL"
      ],
      "options": [
        {
          "value": "1",
          "label": {
            "value": "\"Chauffage collectif (chaudière commune à plusieurs logements de l’immeuble ou réseau de chauffage urbain)\"",
            "type": "VTL"
          }
        },
        {
          "value": "2",
          "label": {
            "value": "\"Chaudière individuelle (propre au logement)\"",
            "type": "VTL"
          }
        },
        {
          "value": "3",
          "label": {
            "value": "\"Chauffage individuel « tout électrique »\"",
            "type": "VTL"
          }
        },
        {
          "value": "4",
          "label": {
            "value": "\"Poêle, cheminée, cuisinière, etc.\"",
            "type": "VTL"
          }
        }
      ],
      "response": {
        "name": "CHFL"
      }
    },
    {
      "id": "klqo6tay",
      "componentType": "Radio",
      "mandatory": false,
      "page": "16",
      "label": {
        "value": "\"### Quel est le combustible principal de chauffage ?\"",
        "type": "VTL|MD"
      },
      "conditionFilter": {
        "value": "(CHFL = \"1\") or (CHFL = \"2\") or (CHFL = \"4\")",
        "type": "VTL",
        "bindingDependencies": [
          "CHFL"
        ]
      },
      "controls": [
        {
          "id": "klqo6tay-CI-0",
          "typeOfControl": "CONSISTENCY",
          "criticality": "WARN",
          "control": {
            "value": "not(isnull(CMBL))",
            "type": "VTL"
          },
          "errorMessage": {
            "value": "\"Merci de renseigner le combustible principal de chauffage.\"",
            "type": "VTL"
          },
          "bindingDependencies": [
            "CMBL"
          ]
        }
      ],
      "bindingDependencies": [
        "CMBL"
      ],
      "options": [
        {
          "value": "1",
          "label": {
            "value": "\"Chauffage urbain\"",
            "type": "VTL"
          }
        },
        {
          "value": "2",
          "label": {
            "value": "\"Gaz de ville ou de réseau\"",
            "type": "VTL"
          }
        },
        {
          "value": "3",
          "label": {
            "value": "\"Fioul (mazout)\"",
            "type": "VTL"
          }
        },
        {
          "value": "4",
          "label": {
            "value": "\"Électricité\"",
            "type": "VTL"
          }
        },
        {
          "value": "5",
          "label": {
            "value": "\"Gaz en bouteille ou en citerne\"",
            "type": "VTL"
          }
        },
        {
          "value": "6",
          "label": {
            "value": "\"Autre (bois, solaire, géothermie, etc.)\"",
            "type": "VTL"
          }
        }
      ],
      "response": {
        "name": "CMBL"
      }
    },
    {
			"id": "klqor7p0",
			"componentType": "Radio",
			"mandatory": false,
			"page": "17",
			"label": {
				"value": "\"### De combien de voitures les habitants de ce logement disposent-ils ?\"",
				"type": "VTL|MD"
			},
			"declarations": [
				{
					"id": "klqor7p0-klqop8l1",
					"declarationType": "INSTRUCTION",
					"position": "BEFORE_QUESTION_TEXT",
					"label": {
						"value": "\"**Ne comptez pas** les voitures ou les fourgonnettes à usage **exclusivement** professionnel.\"",
						"type": "VTL|MD"
					}
				}
			],
			"conditionFilter": {
				"value": "true",
				"type": "VTL"
			},
			"controls": [
				{
					"id": "klqor7p0-CI-0",
					"typeOfControl": "CONSISTENCY",
					"criticality": "WARN",
					"control": {
						"value": "not(isnull(VOIT))",
						"type": "VTL"
					},
					"errorMessage": {
						"value": "\"Merci de renseigner le nombre de voitures des habitants de ce logement.\"",
						"type": "VTL"
					},
					"bindingDependencies": ["VOIT"]
				}
			],
			"bindingDependencies": ["VOIT"],
			"options": [
				{
					"value": "1",
					"label": {
						"value": "\"Aucune\"",
						"type": "VTL"
					}
				},
				{
					"value": "2",
					"label": {
						"value": "\"1\" || \"\"",
						"type": "VTL"
					}
				},
				{
					"value": "3",
					"label": {
						"value": "\"2\" || \"\"",
						"type": "VTL"
					}
				},
				{
					"value": "4",
					"label": {
						"value": "\"3 ou plus\" || \"\"",
						"type": "VTL"
					}
				}
			],
			"response": {
				"name": "VOIT"
			}
		},
    {
			"id": "klqolz63",
			"componentType": "Radio",
			"mandatory": false,
			"page": "18",
			"label": {
				"value": "\"### Disposez-vous d’un emplacement de stationnement réservé à votre usage personnel ?\"",
				"type": "VTL|MD"
			},
			"declarations": [
				{
					"id": "klqolz63-klqoq8gj",
					"declarationType": "INSTRUCTION",
					"position": "BEFORE_QUESTION_TEXT",
					"label": {
						"value": "\"Cet emplacement peut être un garage, un box ou une place de parking de plein air ou souterrain.\"",
						"type": "VTL"
					}
				}
			],
			"conditionFilter": {
				"value": "true",
				"type": "VTL"
			},
			"controls": [
				{
					"id": "klqolz63-CI-0",
					"typeOfControl": "CONSISTENCY",
					"criticality": "WARN",
					"control": {
						"value": "not(isnull(GARL))",
						"type": "VTL"
					},
					"errorMessage": {
						"value": "\"Merci de renseigner la présence d’un emplacement de stationnement.\"",
						"type": "VTL"
					},
					"bindingDependencies": ["GARL"]
				}
			],
			"bindingDependencies": ["GARL"],
			"options": [
				{
					"value": "1",
					"label": {
						"value": "\"Oui\"",
						"type": "VTL"
					}
				},
				{
					"value": "2",
					"label": {
						"value": "\"Non\"",
						"type": "VTL"
					}
				}
			],
			"response": {
				"name": "GARL"
			}
		},
		{
			"id": "lfvaiu4x-title",
			"componentType": "Sequence",
			"page": "19",
			"label": {
				"value": "\"## Deuxième partie : la liste des habitants du logement\"",
				"type": "VTL|MD"
			},
			"conditionFilter": {
				"value": "true",
				"type": "VTL"
			},
			"declarations": [
				{
					"id": "lfvaiu4x-klqr18ql",
					"declarationType": "INSTRUCTION",
					"position": "AFTER_QUESTION_TEXT",
					"label": {
						"value": "\"La liste de l'ensemble des habitants du logement permet de déterminer le nombre de personnes vivant de façon permanente dans un logement, et par conséquant, d'établir la population officielle de chaque commune.\"",
						"type": "VTL"
					}
				}
			]
		},
    {
      "id": "j6q9h8tj",
      "componentType": "ComponentSet",
      "page": "20",
      "className": "ComponentSet",
      "conditionFilter": { "value": "true", "type": "VTL" },
      "label": {
          "value": "\"Au total, en vous comptant, combien de personnes vivent habituellement dans ce logement ? \"",
          "type": "VTL"
      },
      "components": [
        {
          "id": "j6q9h8tj-subtitle",
          "componentType": "Sequence",
          "label": {
            "value": "\"#### Veuillez inclure tous les habitants, y compris vous-même et: \n\n - l'occupant principal déclaré précédemment \n\n - les nourrissons encore à la maternité \n\n - les personnes temporairement absentes (vacances, voyage d'affaires, hospitalisation de moins d'un mois, etc.) \n\n - les personnes qui vivent également une partie du temps ailleurs (enfants ou étudiants scolarisés ailleurs, conjoints éloignés pour raisons professionnelles, enfants en résidence alternée, personnes âgées en institution, etc.) \n\n - les colocataires et les sous-locataires\"",
            "type": "VTL|MD"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          }
        },
        {
          "id": "j6q9h8tj-input",
          "componentType": "InputNumber",
          "mandatory": true,
          "decimals": 0,
          "min": 1,
          "max": 20,
          "label": {
            "value": "\"Nombre d'habitants\"",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "response": {
            "name": "COUNT_PERSONS"
          }
        }
      ]
    },
    {
      "id": "loop",
      "componentType": "Loop",
      "loopDependencies": [
        "COUNT_PERSONS"
      ],
      "iterations": {
        "value": "COUNT_PERSONS",
        "type": "VTL"
      },
      "page": "21",
      "maxPage": "1",
      "depth": 1,
      "paginatedLoop": true,
      "conditionFilter": {
        "value": "true",
        "type": "VTL"
      },
      "components": [
        {
          "id": "lfwg2ny2",
          "componentType": "ComponentSet",
          "page": "21.1",
          "className": "ComponentSet",
					"conditionFilter": {
						"value": "(COUNT_PERSONS >= 1)",
						"type": "VTL",
						"bindingDependencies": ["COUNT_PERSONS"]
					},
          "label": {
              "value": "\"Description de l’habitant\"",
              "type": "VTL"
          },
          "components": [
            {
              "id": "lfwg2ny2-noms",
              "componentType": "Input",
              "mandatory": true,
              "maxLength": 249,
              "label": {
                "value": "\"Nom\"",
                "type": "VTL"
              },
              "controls": [
                {
                  "id": "lfwiyuih-nom-null",
                  "typeOfControl": "CONSISTENCY",
                  "criticality": "WARN",
                  "control": {
                    "value": "not(isnull(NOMS))",
                    "type": "VTL"
                  },
                  "errorMessage": {
                    "value": "\" Veuillez entrer un nom\"",
                    "type": "VTL"
                  }
                }
              ],
              "bindingDependencies": ["NOMS"],
              "response": {
                "name": "NOMS"
              }
            },
            {
              "id": "lfwg2ny2-prenoms",
              "label": {
                "value": "\"Prénom\"",
                "type": "VTL"
              },
              "conditionFilter": {
                "value": "true",
                "type": "VTL"
              },
              "componentType": "Input",
              "response": {
                "name": "PRENOMS"
              }
            },
            {
              "id": "lfwiizq2-dob",
              "componentType": "Datepicker",
              "mandatory": true,
              "min": "1900-01-01",
              "max": "format-date(current-date(),'[Y0001]-[M01]-[D01]')",
              "label": {
                "value": " \"Date de naissance\"",
                "type": "VTL"
              },
              "controls": [
                {
                  "id": "lfwiizq2-format-borne-inf-sup",
                  "typeOfControl": "FORMAT",
                  "criticality": "ERROR",
                  "control": {
                    "value": "not(not(isnull(DATENAISS)) and (cast(DATENAISS, date, \"YYYY-MM-DD\")>cast(\"format-date(current-date(),'[Y0001]-[M01]-[D01]')\", date, \"YYYY-MM-DD\") or cast(DATENAISS, date, \"YYYY-MM-DD\")<cast(\"1900-01-01\", date, \"YYYY-MM-DD\")))",
                    "type": "VTL"
                  },
                  "errorMessage": {
                    "value": "\"La date saisie doit être comprise entre 1900-01-01 et format-date(current-date(),'[Y0001]-[M01]-[D01]').\"",
                    "type": "VTL|MD"
                  }
                },
                {
                  "id": "lfwiizq2-nom-null",
                  "typeOfControl": "CONSISTENCY",
                  "criticality": "WARN",
                  "control": {
                    "value": "not(isnull(DATENAISS))",
                    "type": "VTL"
                  },
                  "errorMessage": {
                    "value": "\" Veuillez entrer une date de naissance\"",
                    "type": "VTL"
                  }
                }
              ],
              "bindingDependencies": ["DATENAISS"],
              "dateFormat": "YYYY-MM-DD",
              "response": {
                "name": "DATENAISS"
              }
            },
            {
              "id": "lfvahf2g",
              "componentType": "Radio",
              "mandatory": true,
              "label": {
                "value": "\"Sexe\"",
                "type": "VTL"
              },
              "bindingDependencies": ["SEXES"],
              "controls": [
                {
                  "id": "lfvahf2g-nom-null",
                  "typeOfControl": "CONSISTENCY",
                  "criticality": "WARN",
                  "control": {
                    "value": "not(isnull(SEXES))",
                    "type": "VTL"
                  },
                  "errorMessage": {
                    "value": "\" Veuillez sélectionner un sexe\"",
                    "type": "VTL"
                  }
                }
              ],
              "options": [
                {
                  "value": "1",
                  "label": {
                    "value": "\"Homme\"",
                    "type": "VTL"
                  }
                },
                {
                  "value": "2",
                  "label": {
                    "value": "\"Femme\"",
                    "type": "VTL"
                  }
                }
              ],
              "response": {
                "name": "SEXES"
              }
            }
          ]
        },
				{
					"id": "lfwgqxv0",
					"componentType": "Radio",
					"mandatory": false,
					"page": "21.2",
					"label": {
						"value": "\"### Est-ce que \" || (if isnull(PRENOMS) then \"cet habitant\" else PRENOMS) || \" \" || (if isnull(NOMS) then \"\" else NOMS) || \" vit aussi dans un autre logement ? \"",
						"type": "VTL|MD"
					},
					"declarations": [
						{
							"id": "kkxuu8ov-l8ty0pcg",
							"declarationType": "STATEMENT",
							"position": "BEFORE_QUESTION_TEXT",
							"label": {
								"value": "(if isnull(PRENOMS) then \"cet habitant\" else PRENOMS) || \" \" || (if isnull(NOMS) then \"\" else NOMS) || \" vit dans ce logement au moins une partie de l’année.\"",
								"type": "VTL"
							}
						}
					],
					"conditionFilter": {
						"value": "(COUNT_PERSONS >= 1)",
						"type": "VTL",
						"bindingDependencies": ["COUNT_PERSONS"]
					},
					"bindingDependencies": [
						"PRENOMS",
						"NOMS",
						"LIB_ILELLES",
						"VIVEZVOUSDS"
					],
					"options": [
						{
							"value": "1",
							"label": {
								"value": "\"Non, \" || if nvl(SEXES,\"\") = \"il/elle\" then \"\" else (if SEXES = \"2\" then \"elle\" else \"il\") || \" vit ici uniquement\"",
								"type": "VTL"
							}
						},
						{
							"value": "2",
							"label": {
								"value": "\"Oui, pour ses études, \" || if nvl(SEXES,\"\") = \"il/elle\" then \"\" else (if SEXES = \"2\" then \"elle\" else \"il\") || \" vit aussi dans un autre logement\"",
								"type": "VTL"
							}, 
              "description": {
								"value": "\"Internat, logement indépendant, chambre en ville, etc.\"",
								"type": "VTL"
							}
						},
						{
							"value": "3",
							"label": {
								"value": "\"Oui, pour des raisons professionnelles, \" || if nvl(SEXES,\"\") = \"il/elle\" then \"\" else (if SEXES = \"2\" then \"elle\" else \"il\") || \" vit aussi dans un autre logement\"",
								"type": "VTL"
							}
						},
						{
							"value": "4",
							"label": {
								"value": "\"Oui, suite à une séparation ou un divorce, \" || if nvl(SEXES,\"\") = \"il/elle\" then \"\" else (if SEXES = \"2\" then \"elle\" else \"il\") || \" vit aussi chez son autre parent\"",
								"type": "VTL"
							}
						},
						{
							"value": "5",
							"label": {
								"value": "\"Oui, pour une autre raison, \" || if nvl(SEXES,\"\") = \"il/elle\" then \"\" else (if SEXES = \"2\" then \"elle\" else \"il\") || \" vit aussi dans un autre logement\"",
								"type": "VTL"
							}
						}
					],
					"response": {
						"name": "VIVEZVOUSDS"
					}
				},
				{
					"id": "lfwjdg33",
					"componentType": "Radio",
					"mandatory": false,
					"page": "21.2",
					"label": {
						"value": "\"### Pour ses études, \" || (if isnull(PRENOMS) then \"cet habitant\" else PRENOMS) || \" \" || (if isnull(NOMS) then \"\" else NOMS) || \" vit aussi dans une autre logement. Quelle est sa situation précisément ?\"",
						"type": "VTL|MD"
					},
					"conditionFilter": {
						"value": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"2\")",
						"type": "VTL",
						"bindingDependencies": ["COUNT_PERSONS", "VIVEZVOUSDS"]
					},
					"bindingDependencies": ["ILELLE_MAJS", "ETUDES"],
					"options": [
						{
							"value": "1",
							"label": {
								"value": "if nvl(SEXES,\"\") = \"Il/Elle\" then \"\" else (if SEXES = \"2\" then \"Elle\" else \"Il\") || \" vit ailleurs pour ses études mais revient vivre ici pour les week-ends et/ou les vacances\"",
								"type": "VTL"
							}
						},
						{
							"value": "2",
							"label": {
								"value": "if nvl(SEXES,\"\") = \"Il/Elle\" then \"\" else (if SEXES = \"2\" then \"Elle\" else \"Il\") || \" vit dans son logement familial pour les week-ends et/ou les vacances mais vit ici pour ses études.\"",
								"type": "VTL"
							}
						}
					],
					"response": {
						"name": "ETUDES"
					}
				},
				{
					"id": "lfwk0rof",
					"componentType": "Radio",
					"mandatory": false,
					"page": "21.2",
					"label": {
						"value": "\"### Pour des raisons professionnelles, \" || (if isnull(PRENOMS) then \"cet habitant\" else PRENOMS) || \" \" || (if isnull(NOMS) then \"\" else NOMS) || \" vit aussi dans une autre logement. Quelle est sa situation précisément ?\"",
						"type": "VTL|MD"
					},
					"conditionFilter": {
						"value": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"3\")",
						"type": "VTL",
						"bindingDependencies": ["COUNT_PERSONS", "VIVEZVOUSDS"]
					},
					"bindingDependencies": ["ILELLE_MAJS", "PROFESSIONS"],
					"options": [
						{
							"value": "1",
							"label": {
								"value": "if nvl(SEXES,\"\") = \"Il/Elle\" then \"\" else (if SEXES = \"2\" then \"Elle\" else \"Il\") || \" vit dans un autre logement pour des raisons professionnelles mais revient vivre ici pour les week-ends. \"",
								"type": "VTL"
							}
						},
						{
							"value": "2",
							"label": {
								"value": "if nvl(SEXES,\"\") = \"Il/Elle\" then \"\" else (if SEXES = \"2\" then \"Elle\" else \"Il\") || \" vit dans son logement familial les week-ends mais vit ici pour des raisons professionnelles.\"",
								"type": "VTL"
							}
						}
					],
					"response": {
						"name": "PROFESSIONS"
					}
				},
				{
					"id": "lfwk0lb2",
					"componentType": "Radio",
					"mandatory": false,
					"page": "21.2",
					"label": {
						"value": "\"### Suite à une séparation ou un divorce, \" || (if isnull(PRENOMS) then \"cet habitant\" else PRENOMS) || \" \" || (if isnull(NOMS) then \"\" else NOMS) || \" vit aussi dans une autre logement. Quelle part de son temps passe-t-\" || LIB_ILELLES || \" ici ?\"",
						"type": "VTL|MD"
					},
					"conditionFilter": {
						"value": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"4\")",
						"type": "VTL",
						"bindingDependencies": ["COUNT_PERSONS", "VIVEZVOUSDS"]
					},
					"bindingDependencies": [
						"PRENOMS",
						"NOMS",
						"ILELLE_MAJS",
						"SEPARATIONS"
					],
					"options": [
						{
							"value": "1",
							"label": {
								"value": "if nvl(SEXES,\"\") = \"Il/Elle\" then \"\" else (if SEXES = \"2\" then \"Elle\" else \"Il\") || \" vit ici plus de la moitié du temps\"",
								"type": "VTL"
							}
						},
						{
							"value": "2",
							"label": {
								"value": "if nvl(SEXES,\"\") = \"Il/Elle\" then \"\" else (if SEXES = \"2\" then \"Elle\" else \"Il\") || \" vit ici la moitié du temps\"",
								"type": "VTL"
							}
						},
						{
							"value": "3",
							"label": {
								"value": "if nvl(SEXES,\"\") = \"Il/Elle\" then \"\" else (if SEXES = \"2\" then \"Elle\" else \"Il\") || \" vit ici moins de la moitié du temps\"",
								"type": "VTL"
							}
						}
					],
					"response": {
						"name": "SEPARATIONS"
					}
				},
				{
					"id": "lfwjyhfp",
					"componentType": "Radio",
					"mandatory": false,
					"page": "21.2",
					"label": {
						"value": "\"### \" || (if isnull(PRENOMS) then \"Cet habitant\" else PRENOMS) || \" \" || (if isnull(NOMS) then \"\" else NOMS) || \" a-t-\" || (if isnull(PRENOMS) then \"il\" else LIB_ILELLES) || \" passé la nuit du 30 mars 2023 dans ce logement ?\"",
						"type": "VTL|MD"
					},
					"conditionFilter": {
						"value": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"4\") and (SEPARATIONS = \"2\")",
						"type": "VTL",
						"bindingDependencies": [
							"COUNT_PERSONS",
							"VIVEZVOUSDS",
							"SEPARATIONS"
						]
					},
					"bindingDependencies": [
						"PRENOMS",
						"NOMS",
						"LIB_ILELLES",
						"NUIT_ICIS"
					],
					"options": [
						{
							"value": "1",
							"label": {
								"value": "\"Oui\"",
								"type": "VTL"
							}
						},
						{
							"value": "2",
							"label": {
								"value": "\"Non\"",
								"type": "VTL"
							}
						}
					],
					"response": {
						"name": "NUIT_ICIS"
					}
				},
				{
					"id": "lfwkbt1a",
					"componentType": "Radio",
					"mandatory": false,
					"page": "21.2",
					"label": {
						"value": "\"### Pour des raisons qui ne sont liées ni aux études, ni pour des raisons professionnelles, ni à une séparation ou un divorce, \" || (if isnull(PRENOMS) then \"cet habitant\" else PRENOMS) || \" \" || (if isnull(NOMS) then \"\" else NOMS) || \" vit aussi dans une autre logement. Quelle est sa situations précisèment ?\"",
						"type": "VTL|MD"
					},
					"conditionFilter": {
						"value": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"5\")",
						"type": "VTL",
						"bindingDependencies": ["COUNT_PERSONS", "VIVEZVOUSDS"]
					},
					"bindingDependencies": ["ILELLE_MAJS", "LIB_ES", "AUTRE_SITUATIONS"],
					"options": [
						{
							"value": "1",
							"label": {
								"value": "if nvl(SEXES,\"\") = \"Il/Elle\" then \"\" else (if SEXES = \"2\" then \"Elle\" else \"Il\") || \" vit dans un établissement mais ce logement reste sa résidence personnelle.\"",
								"type": "VTL"
							},
              "description": {
								"value": "\"Maison de retraite ou hospice, hospitalisation pour plus dún mois, centre pour handicapés, foyer de travailleurs, militaires logés en caserne ou servent à l'étranger, établissement pénitentiaire, etc.\"",
								"type": "VTL"
							}
						},
						{
							"value": "2",
							"label": {
								"value": "if nvl(SEXES,\"\") = \"Il/Elle\" then \"\" else (if SEXES = \"2\" then \"Elle\" else \"Il\") || \" est employ\" || LIB_ES || \" de maison, salari\"|| LIB_ES ||\" ou jeune au pair et vit ici.\"",
								"type": "VTL"
							}
						},
						{
							"value": "3",
							"label": {
								"value": "if nvl(SEXES,\"\") = \"Il/Elle\" then \"\" else (if SEXES = \"2\" then \"Elle\" else \"Il\") || \" vit la plus grande partie de l’année dans un autre logement mais vit temporairement ici au moment du recensement.\"",
								"type": "VTL"
							}
						}
					],
					"response": {
						"name": "AUTRE_SITUATIONS"
					}
				}
      ]
    },
    {
      "id": "roundabout",
      "componentType": "Roundabout",
      "page": "22",
      "conditionFilter": {
        "value": "true",
        "type": "VTL"
      },
      "iterations": {
        "value": "COUNT_PERSONS",
        "type": "VTL"
      },
      "label": {
        "value": "\"Les bulletins individuels\"",
        "type": "VTL"
      },
      "locked": false,
      "expressions": {
        "complete": {
          "value": "not(isnull(NATIO)) and not(isnull(PROF))) and not(isnull(OUESTVOUSNE)",
          "type": "VTL"
        },
        "partial": {
          "value": "not(isnull(NATIO)) or not(isnull(PROF))) or not(isnull(OUESTVOUSNE)",
          "type": "VTL"
        },
        "label": {
          "value": "PRENOMS || \" \" || NOMS",
          "type": "VTL"
        },
        "unnecessary": {
          "value": "if (VIVEZVOUSDS <> \"1\") then (PRENOMS || \" \" || NOMS || \" n’a pas à compléter de questionnaire individuel car il n’est pas catégorisé comme un résident permanent de ce logement.\") else (if ((2023 - cast(substr(cast(DATENAISS,string),1,4),integer)) < 10) then (PRENOMS || \" \" || NOMS || \" n’a pas à compléter de questionnaire individuel car il est âgé de moins de 10 ans.\") else \"\")",
          "type": "VTL"
        }
      },
      "bindingDependencies": ["UNNECESSARY_BI", "VIVEZVOUSDS"],
      "controls": [
				{
					"id": "roundabout-Carefull",
					"criticality": "WARN",
					"control": {
						"value": "(VIVEZVOUSDS <> \"1\") or (not(isnull(NATIO)) and not(isnull(PROF))) and not(isnull(OUESTVOUSNE)) or ((2023 - cast(substr(cast(DATENAISS,string),1,4),integer)) < 10)",
						"type": "VTL", 
            "bindingDependencies": ["VIVEZVOUSDS"]
					},
					"type": "roundabout",
					"iterations": { "value": "COUNT_PERSONS", "type": "VTL" },
					"errorMessage": {
						"value": "\"Le formulaire de \" || PRENOMS || \" \" || NOMS || \" n'a pas été complété\"",
						"type": "VTL"
					}
				}
			],
      "components": [
        {
          "id": "jsygk7m7",
          "componentType": "Subsequence",
          "page": "22.1",
          "label": {
            "value": "\"Première page de questions pour \" || PRENOMS",
            "type": "VTL|MD"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          }
        },
        {
          "id": "kmno1n7m",
          "componentType": "Input",
          "maxLength": 3,
          "page": "22.1",
          "label": {
            "value": "\"Quelle est votre nationalité ?\"))",
            "type": "VTL"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "response": {
            "name": "NATIO"
          }
        },
        {
          "id": "jsygk7m7",
          "componentType": "Subsequence",
          "page": "22.2",
          "label": {
            "value": "\"Deuxième page de questions pour \"|| PRENOMS",
            "type": "VTL|MD"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          }
        },
        {
          "id": "kmno1n7m",
          "componentType": "Input",
          "page": "22.2",
          "label": {
            "value": "\"Quelle est votre profession ?\"))",
            "type": "VTL|MD"
          },
          "description": {
            "value": "\"Le suggester est en grève...\"))",
            "type": "VTL|MD"
          },
          "conditionFilter": {
            "value": "true",
            "type": "VTL"
          },
          "response": {
            "name": "PROF"
          }
        }, 
        {
          "id": "lfs5q1zj",
          "componentType": "ComponentSet",
          "page": "22.3",
          "conditionFilter": { "value": "true", "type": "VTL" },
          "label": {
              "value": "\"Ou etes vous né ?\"",
              "type": "VTL"
          },
          "components": [
            {
              "id": "klqn2o7tx",
              "componentType": "Radio",
              "mandatory": false,
              "conditionFilter": {
                "value": "true",
                "type": "VTL"
              },
              "controls": [
                {
                  "id": "klqn2o7tx-CI-0",
                  "typeOfControl": "CONSISTENCY",
                  "criticality": "WARN",
                  "control": {
                    "value": "not(isnull(OUESTVOUSNE))",
                    "type": "VTL"
                  },
                  "errorMessage": {
                    "value": "\"Merci d’indiquer l’année d’achèvement de la construction. \"",
                    "type": "VTL"
                  },
                  "bindingDependencies": ["OUESTVOUSNE"]
                }
              ],
              "bindingDependencies": ["OUESTVOUSNE"],
              "options": [
                {
                  "value": "1",
                  "label": {
                    "value": "\"En France\"",
                    "type": "VTL"
                  }
                },
                {
                  "value": "2",
                  "label": {
                    "value": "\"A l'étranger\"",
                    "type": "VTL"
                  }
                }
              ],
              "response": {
                "name": "OUESTVOUSNE"
              }
            },
            {
              "id": "klqn3zmkx",
              "componentType": "Input",
              "mandatory": false,
              "label": {
                "value": "\"Dans quel pays êtes-vous né(e) ?\"",
                "type": "VTL"
              },
              "conditionFilter": {
                "value": "OUESTVOUSNE = \"1\"",
                "type": "VTL"
              },
              "controls": [
              ],
              "bindingDependencies": ["OUESTVOUSNE"],
              "response": {
                "name": "OUESTVOUSNECOMMUNE"
              }
            }
          ]
        }
      ]
    }, 
    {
			"id": "kkxugktl-title",
			"componentType": "Sequence",
			"page": "23",
			"label": {
				"value": "\"## Vous arrivez à la fin du questionnaire. Est-ce que vous être prêt(e) à envoyer vos réponses ?\"",
				"type": "VTL|MD"
			},
			"conditionFilter": {
				"value": "true",
				"type": "VTL"
			}
		}, 
    {
      "id": "checkboxgroup",
      "componentType": "CheckboxGroup",
      "mandatory": false,
      "page": "23",
      "conditionFilter": { "value": "true", "type": "VTL" },
      "controls": [
          {
              "id": "checkboxgroup",
              "typeOfControl": "CONSISTENCY",
              "criticality": "WARN",
              "control": { "value": "OPT1", "type": "VTL" },
              "errorMessage": {
                  "value": "\"Veuillez confirmer avant de continuer.\"",
                  "type": "VTL"
              },
              "bindingDependencies": ["OPT1"]
          }
      ],
      "responses": [
          {
              "id": "opt1",
              "label": {
                "value": "\"Oui, je confirme que mes réponses sont correctes ?\"",
                "type": "VTL"
              },
              "response": { "name": "OPT1" }
          }
      ]
    }
  ],
  "variables": [
    {
      "variableType": "COLLECTED",
      "name": "COUNT_PERSONS",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "PRENOMS",
      "values": {
        "PREVIOUS": [
          null
        ],
        "COLLECTED": [
          null
        ],
        "FORCED": [
          null
        ],
        "EDITED": [
          null
        ],
        "INPUTED": [
          null
        ]
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "NATIO",
      "values": {
        "PREVIOUS": [
          null
        ],
        "COLLECTED": [
          null
        ],
        "FORCED": [
          null
        ],
        "EDITED": [
          null
        ],
        "INPUTED": [
          null
        ]
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "PROF",
      "values": {
        "PREVIOUS": [
          null
        ],
        "COLLECTED": [
          null
        ],
        "FORCED": [
          null
        ],
        "EDITED": [
          null
        ],
        "INPUTED": [
          null
        ]
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "NOMS",
      "values": {
        "PREVIOUS": [
          null
        ],
        "COLLECTED": [
          null
        ],
        "FORCED": [
          null
        ],
        "EDITED": [
          null
        ],
        "INPUTED": [
          null
        ]
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "DATENAISS",
      "values": {
        "PREVIOUS": [
          null
        ],
        "COLLECTED": [
          null
        ],
        "FORCED": [
          null
        ],
        "EDITED": [
          null
        ],
        "INPUTED": [
          null
        ]
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "SEXES",
      "values": {
        "PREVIOUS": [
          null
        ],
        "COLLECTED": [
          null
        ],
        "FORCED": [
          null
        ],
        "EDITED": [
          null
        ],
        "INPUTED": [
          null
        ]
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "VIVEZVOUSDS",
      "values": {
        "PREVIOUS": [
          null
        ],
        "COLLECTED": [
          null
        ],
        "FORCED": [
          null
        ],
        "EDITED": [
          null
        ],
        "INPUTED": [
          null
        ]
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "ETUDES",
      "values": {
        "PREVIOUS": [
          null
        ],
        "COLLECTED": [
          null
        ],
        "FORCED": [
          null
        ],
        "EDITED": [
          null
        ],
        "INPUTED": [
          null
        ]
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "PROFESSIONS",
      "values": {
        "PREVIOUS": [
          null
        ],
        "COLLECTED": [
          null
        ],
        "FORCED": [
          null
        ],
        "EDITED": [
          null
        ],
        "INPUTED": [
          null
        ]
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "SEPARATIONS",
      "values": {
        "PREVIOUS": [
          null
        ],
        "COLLECTED": [
          null
        ],
        "FORCED": [
          null
        ],
        "EDITED": [
          null
        ],
        "INPUTED": [
          null
        ]
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "NUIT_ICIS",
      "values": {
        "PREVIOUS": [
          null
        ],
        "COLLECTED": [
          null
        ],
        "FORCED": [
          null
        ],
        "EDITED": [
          null
        ],
        "INPUTED": [
          null
        ]
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "AUTRE_SITUATIONS",
      "values": {
        "PREVIOUS": [
          null
        ],
        "COLLECTED": [
          null
        ],
        "FORCED": [
          null
        ],
        "EDITED": [
          null
        ],
        "INPUTED": [
          null
        ]
      }
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_COUNT_PERSONS",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_NOMS",
      "expression": {
        "value": "(COUNT_PERSONS >= 1)",
        "type": "VTL"
      },
      "bindingDependencies": [
        "COUNT_PERSONS"
      ],
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_PRENOMS",
      "expression": {
        "value": "(COUNT_PERSONS >= 1)",
        "type": "VTL"
      },
      "bindingDependencies": [
        "COUNT_PERSONS"
      ],
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_DATENAIS",
      "expression": {
        "value": "(COUNT_PERSONS >= 1)",
        "type": "VTL"
      },
      "bindingDependencies": [
        "COUNT_PERSONS"
      ],
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_SEXES",
      "expression": {
        "value": "(COUNT_PERSONS >= 1)",
        "type": "VTL"
      },
      "bindingDependencies": [
        "COUNT_PERSONS"
      ],
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_VIVEZVOUSDS",
      "expression": {
        "value": "(COUNT_PERSONS >= 1)",
        "type": "VTL"
      },
      "bindingDependencies": [
        "COUNT_PERSONS"
      ],
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_ETUDES",
      "expression": {
        "value": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"2\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "COUNT_PERSONS",
        "VIVEZVOUSDS"
      ],
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_PROFESSIONS",
      "expression": {
        "value": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"3\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "COUNT_PERSONS",
        "VIVEZVOUSDS"
      ],
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_SEPARATIONS",
      "expression": {
        "value": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"4\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "COUNT_PERSONS",
        "VIVEZVOUSDS"
      ],
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_NUIT_ICIS",
      "expression": {
        "value": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"4\") and (SEPARATIONS = \"2\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "COUNT_PERSONS",
        "VIVEZVOUSDS",
        "SEPARATIONS"
      ],
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_AUTRE_SITUATIONS",
      "expression": {
        "value": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"5\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "COUNT_PERSONS",
        "VIVEZVOUSDS"
      ],
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "LIB_ES",
      "expression": {
        "value": "if nvl(SEXES,\"\") = \"\" then \"\" else (if SEXES = \"2\" then \"ée\" else \"é\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "SEXES"
      ],
      "inFilter": "false",
      "shapeFrom": "SEXES"
    },
    {
      "variableType": "CALCULATED",
      "name": "ILELLE_MAJS",
      "expression": {
        "value": "if nvl(SEXES,\"\") = \"Il\/Elle\" then \"\" else (if SEXES = \"2\" then \"Elle\" else \"Il\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "SEXES"
      ],
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "LIB_ILELLES",
      "expression": {
        "value": "if nvl(SEXES,\"\") = \"il\/elle\" then \"\" else (if SEXES = \"2\" then \"elle\" else \"il\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "SEXES"
      ],
      "inFilter": "false",
      "shapeFrom": "SEXES"
    },
    {
      "variableType": "COLLECTED",
      "name": "ZC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "TYPES",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "TYPC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "ASPB",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "EAU",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "ADR_RANG",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "LOG_RANG",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "NOM_OCC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "EMAIL_OCC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "NUMVOI_LOC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "BISTER_LOC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "TYPEVOI_LOC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "NOMVOI_LOC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "RES_LOC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "BAT_LOC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "ESC_LOC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "ETAGE_LOC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "N_PORTE_LOC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "CPOST_LOC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "COM_LOC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "TYPL",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "ASCEN",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "ACHL",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "OUESTVOUSNE",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "OUESTVOUSNECOMMUNE",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "AACHL",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "IAEMM",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "AEMM_OCC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "AEMM",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "NBPI",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "SURF",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "STOC",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "HLML",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "OPT1",
      "values": {
          "PREVIOUS": null,
          "COLLECTED": null,
          "FORCED": null,
          "EDITED": null,
          "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "SANI",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "CHFL",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "EGOUL",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "CMBL",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "VOIT",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "GARL",
      "values": {
        "PREVIOUS": null,
        "COLLECTED": null,
        "FORCED": null,
        "EDITED": null,
        "INPUTED": null
      }
    },
    {
      "variableType": "COLLECTED",
      "name": "VALIDATION",
      "values": {
        "PREVIOUS": [
          null
        ],
        "COLLECTED": [
          null
        ],
        "FORCED": [
          null
        ],
        "EDITED": [
          null
        ],
        "INPUTED": [
          null
        ]
      }
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_ZC",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_ADR_RANG",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_LOG_RANG",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_NOM_OCC",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_EMAIL_OCC",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_NUMVOI_LOC",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_BISTER_LOC",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_TYPEVOI_LOC",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_NOMVOI_LOC",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_RES_LOC",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_BAT_LOC",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_ESC_LOC",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_ETAGE_LOC",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_N_PORTE_LOC",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_CPOST_LOC",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_COM_LOC",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_TYPC",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_ASCEN",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_ACHL",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_TYPES",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_AACHL",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_IAEMM",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_AEMM_OCC",
      "expression": {
        "value": "(IAEMM = \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "IAEMM"
      ],
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_AEMM",
      "expression": {
        "value": "(IAEMM = \"2\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "IAEMM"
      ],
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_NBPI",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_SURF",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_STOC",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_HLML",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_SANI",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_CHFL",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_CMBL",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_VOIT",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_GARL",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_NOM",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "shapeFrom": "NOM",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_PRENOM",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "shapeFrom": "NOM",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_SEXE",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "shapeFrom": "NOM",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_DATENAIS",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "shapeFrom": "NOM",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "DATENAIS_UNDERAGE",
      "expression": {
        "value": "2023 - cast(substr(cast(DATENAISS,string),1,4),integer)",
        "type": "VTL"
      },
      "bindingDependencies": [
        "DATENAISS"
      ],
      "shapeFrom": "NOM",
      "inFilter": "true"
    },
    {
      "variableType": "CALCULATED",
      "name": "UNNECESSARY_BI",
      "expression": {
        "value": "VIVEZVOUSDS = \"1\"",
        "type": "VTL"
      },
      "bindingDependencies": [
        "VIVEZVOUSDS"
      ],
      "shapeFrom": "NOM",
      "inFilter": "true"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_BONJOURPEU",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_VITICI",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "shapeFrom": "VITICI",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_VITAILLEURS",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "shapeFrom": "VITICI",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_ESTCEQUEIF",
      "expression": {
        "value": "(VITAILLEURS = \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "VITAILLEURS"
      ],
      "shapeFrom": "VITICI",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_LIEUXHABETUDES",
      "expression": {
        "value": "(ESTCEQUEIF = \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "ESTCEQUEIF"
      ],
      "shapeFrom": "VITICI",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_LIEUXHABPROF",
      "expression": {
        "value": "(ESTCEQUEIF = \"2\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "ESTCEQUEIF"
      ],
      "shapeFrom": "VITICI",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_LIEUXHABSEP",
      "expression": {
        "value": "(ESTCEQUEIF = \"3\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "ESTCEQUEIF"
      ],
      "shapeFrom": "VITICI",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_LIEUXHABSEP2",
      "expression": {
        "value": "(ESTCEQUEIF = \"3\") and (LIEUXHABSEP = \"2\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "ESTCEQUEIF",
        "LIEUXHABSEP"
      ],
      "shapeFrom": "VITICI",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_LIEUXHABAUTRE",
      "expression": {
        "value": "(ESTCEQUEIF = \"4\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "ESTCEQUEIF"
      ],
      "shapeFrom": "VITICI",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_BI_LIEUNAIS",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_CNAI_FRANCE",
      "expression": {
        "value": "(BI_LIEUNAIS = \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "BI_LIEUNAIS"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_DPNAI_FRANCE",
      "expression": {
        "value": "(BI_LIEUNAIS = \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "BI_LIEUNAIS"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_CNAI_ETRANGER",
      "expression": {
        "value": "(BI_LIEUNAIS = \"2\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "BI_LIEUNAIS"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_PNAI_ETRANGER",
      "expression": {
        "value": "(BI_LIEUNAIS = \"2\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "BI_LIEUNAIS"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_ARRIV",
      "expression": {
        "value": "(BI_LIEUNAIS = \"2\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "BI_LIEUNAIS"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_INAT",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_INAT2",
      "expression": {
        "value": "(INAT = \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "INAT"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_NATN",
      "expression": {
        "value": "(INAT2 = \"2\" || INAT = \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "INAT2",
        "INAT"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_ETUD",
      "expression": {
        "value": "true",
        "type": "VTL"
      },
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_ESTCEUNTAB",
      "expression": {
        "value": "(ETUD = \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "ETUD"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_ILETU",
      "expression": {
        "value": "(ESTCEUNTAB = \"2\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "ESTCEUNTAB"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_CETU",
      "expression": {
        "value": "(ESTCEUNTAB = \"2\") and (ILETU = \"2\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "ESTCEUNTAB",
        "ILETU"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_PNAI_CETU",
      "expression": {
        "value": "(ESTCEUNTAB = \"2\") and (ILETU = \"3\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "ESTCEUNTAB",
        "ILETU"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_PNAI_TU",
      "expression": {
        "value": "(ESTCEUNTAB = \"2\") and (ILETU = \"3\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "ESTCEUNTAB",
        "ILETU"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_IRAN",
      "expression": {
        "value": "(AGE > 1 and not(isnull(AGE)))",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_COMMAVANTFRANCE",
      "expression": {
        "value": "(AGE > 1 and not(isnull(AGE))) and (IRAN = \"3\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "IRAN"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_DRAN",
      "expression": {
        "value": "(AGE > 1 and not(isnull(AGE))) and (IRAN = \"3\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "IRAN"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_COMMAVANTETR",
      "expression": {
        "value": "(AGE > 1 and not(isnull(AGE))) and (IRAN = \"4\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "IRAN"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_PAYSAVANT",
      "expression": {
        "value": "(AGE > 1 and not(isnull(AGE))) and (IRAN = \"4\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "IRAN"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_COUPLE",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE)))",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_MATR",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE)))",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_DIPL",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE)))",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_SITUAT",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE)))",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_SITRAV",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT  <>  \"2\") and (SITUAT  <>  \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_DEJAT",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT  <>  \"2\") and (SITUAT  <>  \"1\") and (SITRAV =\"2\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_STATAV",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT  <>  \"2\") and (SITUAT  <>  \"1\") and (SITRAV =\"2\") and (DEJAT = \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV",
        "DEJAT"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_PROFA",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT  <>  \"2\") and (SITUAT  <>  \"1\") and (SITRAV =\"2\") and (DEJAT = \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV",
        "DEJAT"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_RECH",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT  <>  \"2\") and (SITUAT  <>  \"1\") and (SITRAV =\"2\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_RS",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_ACTET",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_LIEU",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_ILT",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU  <>  \"3\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV",
        "LIEU"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_QUELLEESTL",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU  <>  \"3\") and (ILT = \"2\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV",
        "LIEU",
        "ILT"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_CLT",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU  <>  \"3\") and (ILT = \"2\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV",
        "LIEU",
        "ILT"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_STL_COFR",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU  <>  \"3\") and (ILT = \"2\") and (QUELLEESTL = \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV",
        "LIEU",
        "ILT",
        "QUELLEESTL"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_STL_ETR",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU  <>  \"3\") and (ILT = \"2\") and (QUELLEESTL = \"2\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV",
        "LIEU",
        "ILT",
        "QUELLEESTL"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_TRANS",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU  <>  \"3\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV",
        "LIEU"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_TP",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_STAT",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_NBSAL",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT  <>  \"3\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV",
        "STAT"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_PROFI",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT  <>  \"3\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV",
        "STAT"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_EMPL",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV",
        "STAT"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_POSP",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV",
        "STAT"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_PROFS",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV",
        "STAT"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_FONC",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE",
        "SITUAT",
        "SITRAV",
        "STAT"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    },
    {
      "variableType": "CALCULATED",
      "name": "FILTER_RESULT_VALIDATION",
      "expression": {
        "value": "(AGE > 13 and not(isnull(AGE)))",
        "type": "VTL"
      },
      "bindingDependencies": [
        "AGE"
      ],
      "shapeFrom": "BI_LIEUNAIS",
      "inFilter": "false"
    }
  ],
  "cleaning": {
    "COUNT_PERSONS": {
      "NOMS": "(COUNT_PERSONS >= 1)",
      "PRENOMS": "(COUNT_PERSONS >= 1)",
      "DATENAIS": "(COUNT_PERSONS >= 1)",
      "SEXES": "(COUNT_PERSONS >= 1)",
      "VIVEZVOUSDS": "(COUNT_PERSONS >= 1)",
      "ETUDES": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"2\")",
      "PROFESSIONS": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"3\")",
      "SEPARATIONS": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"4\")",
      "NUIT_ICIS": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"4\") and (SEPARATIONS = \"2\")",
      "AUTRE_SITUATIONS": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"5\")"
    },
    "VIVEZVOUSDS": {
      "ETUDES": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"2\")",
      "PROFESSIONS": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"3\")",
      "SEPARATIONS": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"4\")",
      "NUIT_ICIS": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"4\") and (SEPARATIONS = \"2\")",
      "AUTRE_SITUATIONS": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"5\")"
    },
    "SEPARATIONS": {
      "NUIT_ICIS": "(COUNT_PERSONS >= 1) and (VIVEZVOUSDS = \"4\") and (SEPARATIONS = \"2\")"
    },
    "IAEMM": {
      "AEMM_OCC": "(IAEMM = \"1\")",
      "AEMM": "(IAEMM = \"2\")"
    },
    "VITAILLEURS": {
      "ESTCEQUEIF": "(VITAILLEURS = \"1\")"
    },
    "ESTCEQUEIF": {
      "LIEUXHABETUDES": "(ESTCEQUEIF = \"1\")",
      "LIEUXHABPROF": "(ESTCEQUEIF = \"2\")",
      "LIEUXHABSEP": "(ESTCEQUEIF = \"3\")",
      "LIEUXHABSEP2": "(ESTCEQUEIF = \"3\") and (LIEUXHABSEP = \"2\")",
      "LIEUXHABAUTRE": "(ESTCEQUEIF = \"4\")"
    },
    "LIEUXHABSEP": {
      "LIEUXHABSEP2": "(ESTCEQUEIF = \"3\") and (LIEUXHABSEP = \"2\")"
    },
    "BI_LIEUNAIS": {
      "CNAI_FRANCE": "(BI_LIEUNAIS = \"1\")",
      "DPNAI_FRANCE": "(BI_LIEUNAIS = \"1\")",
      "CNAI_ETRANGER": "(BI_LIEUNAIS = \"2\")",
      "PNAI_ETRANGER": "(BI_LIEUNAIS = \"2\")",
      "ARRIV": "(BI_LIEUNAIS = \"2\")"
    },
    "INAT": {
      "INAT2": "(INAT = \"1\")",
      "NATN": "(INAT2 = \"2\" || INAT = \"1\")"
    },
    "INAT2": {
      "NATN": "(INAT2 = \"2\" || INAT = \"1\")"
    },
    "ETUD": {
      "ESTCEUNTAB": "(ETUD = \"1\")"
    },
    "ESTCEUNTAB": {
      "ILETU": "(ESTCEUNTAB = \"2\")",
      "CETU": "(ESTCEUNTAB = \"2\") and (ILETU = \"2\")",
      "PNAI_CETU": "(ESTCEUNTAB = \"2\") and (ILETU = \"3\")",
      "PNAI_TU": "(ESTCEUNTAB = \"2\") and (ILETU = \"3\")"
    },
    "ILETU": {
      "CETU": "(ESTCEUNTAB = \"2\") and (ILETU = \"2\")",
      "PNAI_CETU": "(ESTCEUNTAB = \"2\") and (ILETU = \"3\")",
      "PNAI_TU": "(ESTCEUNTAB = \"2\") and (ILETU = \"3\")"
    },
    "AGE": {
      "IRAN": "(AGE > 1 and not(isnull(AGE)))",
      "COMMAVANTFRANCE": "(AGE > 1 and not(isnull(AGE))) and (IRAN = \"3\")",
      "DRAN": "(AGE > 1 and not(isnull(AGE))) and (IRAN = \"3\")",
      "COMMAVANTETR": "(AGE > 1 and not(isnull(AGE))) and (IRAN = \"4\")",
      "PAYSAVANT": "(AGE > 1 and not(isnull(AGE))) and (IRAN = \"4\")",
      "COUPLE": "(AGE > 13 and not(isnull(AGE)))",
      "SITUAT": "(AGE > 13 and not(isnull(AGE)))",
      "SITRAV": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\")",
      "DEJAT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\")",
      "STATAV": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\") and (DEJAT = \"1\")",
      "PROFA": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\") and (DEJAT = \"1\")",
      "RECH": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\")",
      "RS": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "ACTET": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "LIEU": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "ILT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\")",
      "QUELLEESTL": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\")",
      "CLT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\")",
      "STL_COFR": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\") and (QUELLEESTL = \"1\")",
      "STL_ETR": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\") and (QUELLEESTL = \"2\")",
      "TRANS": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\")",
      "TP": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "STAT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "NBSAL": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT != \"3\")",
      "PROFI": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT != \"3\")",
      "EMPL": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "POSP": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "PROFS": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "FONC": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "VALIDATION": "(AGE > 13 and not(isnull(AGE)))"
    },
    "DATENAIS": {
      "IRAN": "(AGE > 1 and not(isnull(AGE)))",
      "COMMAVANTFRANCE": "(AGE > 1 and not(isnull(AGE))) and (IRAN = \"3\")",
      "DRAN": "(AGE > 1 and not(isnull(AGE))) and (IRAN = \"3\")",
      "COMMAVANTETR": "(AGE > 1 and not(isnull(AGE))) and (IRAN = \"4\")",
      "PAYSAVANT": "(AGE > 1 and not(isnull(AGE))) and (IRAN = \"4\")",
      "COUPLE": "(AGE > 13 and not(isnull(AGE)))",
      "SITUAT": "(AGE > 13 and not(isnull(AGE)))",
      "SITRAV": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\")",
      "DEJAT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\")",
      "STATAV": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\") and (DEJAT = \"1\")",
      "PROFA": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\") and (DEJAT = \"1\")",
      "RECH": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\")",
      "RS": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "ACTET": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "LIEU": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "ILT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\")",
      "QUELLEESTL": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\")",
      "CLT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\")",
      "STL_COFR": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\") and (QUELLEESTL = \"1\")",
      "STL_ETR": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\") and (QUELLEESTL = \"2\")",
      "TRANS": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\")",
      "TP": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "STAT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "NBSAL": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT != \"3\")",
      "PROFI": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT != \"3\")",
      "EMPL": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "POSP": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "PROFS": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "FONC": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "VALIDATION": "(AGE > 13 and not(isnull(AGE)))"
    },
    "IRAN": {
      "COMMAVANTFRANCE": "(AGE > 1 and not(isnull(AGE))) and (IRAN = \"3\")",
      "DRAN": "(AGE > 1 and not(isnull(AGE))) and (IRAN = \"3\")",
      "COMMAVANTETR": "(AGE > 1 and not(isnull(AGE))) and (IRAN = \"4\")",
      "PAYSAVANT": "(AGE > 1 and not(isnull(AGE))) and (IRAN = \"4\")"
    },
    "SITUAT": {
      "SITRAV": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\")",
      "DEJAT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\")",
      "STATAV": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\") and (DEJAT = \"1\")",
      "PROFA": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\") and (DEJAT = \"1\")",
      "RECH": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\")",
      "RS": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "ACTET": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "LIEU": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "ILT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\")",
      "QUELLEESTL": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\")",
      "CLT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\")",
      "STL_COFR": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\") and (QUELLEESTL = \"1\")",
      "STL_ETR": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\") and (QUELLEESTL = \"2\")",
      "TRANS": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\")",
      "TP": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "STAT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "NBSAL": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT != \"3\")",
      "PROFI": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT != \"3\")",
      "EMPL": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "POSP": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "PROFS": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "FONC": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")"
    },
    "SITRAV": {
      "DEJAT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\")",
      "STATAV": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\") and (DEJAT = \"1\")",
      "PROFA": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\") and (DEJAT = \"1\")",
      "RECH": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\")",
      "RS": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "ACTET": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "LIEU": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "ILT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\")",
      "QUELLEESTL": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\")",
      "CLT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\")",
      "STL_COFR": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\") and (QUELLEESTL = \"1\")",
      "STL_ETR": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\") and (QUELLEESTL = \"2\")",
      "TRANS": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\")",
      "TP": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "STAT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\")",
      "NBSAL": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT != \"3\")",
      "PROFI": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT != \"3\")",
      "EMPL": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "POSP": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "PROFS": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "FONC": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")"
    },
    "DEJAT": {
      "STATAV": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\") and (DEJAT = \"1\")",
      "PROFA": "(AGE > 13 and not(isnull(AGE))) and (SITUAT != \"2\") and (SITUAT != \"1\") and (SITRAV =\"2\") and (DEJAT = \"1\")"
    },
    "LIEU": {
      "ILT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\")",
      "QUELLEESTL": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\")",
      "CLT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\")",
      "STL_COFR": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\") and (QUELLEESTL = \"1\")",
      "STL_ETR": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\") and (QUELLEESTL = \"2\")",
      "TRANS": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\")"
    },
    "ILT": {
      "QUELLEESTL": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\")",
      "CLT": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\")",
      "STL_COFR": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\") and (QUELLEESTL = \"1\")",
      "STL_ETR": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\") and (QUELLEESTL = \"2\")"
    },
    "QUELLEESTL": {
      "STL_COFR": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\") and (QUELLEESTL = \"1\")",
      "STL_ETR": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (LIEU != \"3\") and (ILT = \"2\") and (QUELLEESTL = \"2\")"
    },
    "STAT": {
      "NBSAL": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT != \"3\")",
      "PROFI": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT != \"3\")",
      "EMPL": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "POSP": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "PROFS": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")",
      "FONC": "(AGE > 13 and not(isnull(AGE))) and (SITUAT = \"1\" or SITUAT = \"2\" or SITRAV = \"1\") and (STAT = \"3\")"
    }
  },
  "resizing": {
    "PRENOM": {
      "size": "cast(COUNT_PERSONS, integer)",
      "variables": [
        "PRENOMS"
      ]
    },
    "NOM": {
      "size": "cast(COUNT_PERSONS, integer)",
      "variables": [
        "NOMS"
      ]
    },
    "AGE": {
      "size": "cast(COUNT_PERSONS, integer)",
      "variables": [
        "AGES"
      ]
    },
    "SEXE": {
      "size": "cast(COUNT_PERSONS, integer)",
      "variables": [
        "SEXES"
      ]
    }
  }
}